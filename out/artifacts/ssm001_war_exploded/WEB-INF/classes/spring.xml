<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
  http://www.springframework.org/schema/context
  https://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--spring整合mybatis-->
    <!--1、读取外部配置文件-->
    <context:property-placeholder location="classpath:dbutil.properties"/>
    <!--2、管理datasource对象  jdbc-->
    <bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="password" value="873639952"/>
        <property name="username" value="root"/>
        <property name="url" value="${urlName}"/>
        <property name="driverClassName" value="${driverName}"/>
    </bean>
    <!--3、管理sqlSessionFactory对象-->
    <bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <property name="configLocation" value="classpath:mybatis.xml"/>
    </bean>
    <!--4、mapperScan-->
    <bean id="myMapperScan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="mySqlSessionFactory"/>
        <property name="basePackage" value="com.bjpn.mapper"/>
    </bean>
    <!--5、spring提供事务管理-->
    <bean id="myTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource"/>
    </bean>
    <!--6、spring把事务以及事务的传播行为用aop方式切入到service上-->
    <aop:annotation-driven transaction-manager="myTransactionManager"/>
    <!--spring的配置-->
    <context:component-scan base-package="com.bjpn.bean;com.bjpn.service;com.bjpn.controller"/>
    <!--springMVC的配置-->
    <!--1、适配器  映射器-->
    <mvc:annotation-driven/>
    <!--2、静态资源处理-->
    <mvc:default-servlet-handler/>
    <!--3、处理器类扫描  @Controller-->
    <!--<context:component-scan base-package="com.bjpn.controller"/>-->
    <!--4、视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--设置前缀和后缀-->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--5、文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--<property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="#{1024*1024*1024*8}"/>-->
    </bean>
    <!--6、拦截器-->
    <mvc:interceptors>
        <!--登录拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/login/*"/>
            <mvc:exclude-mapping path="/js/*"/>
            <!--<mvc:exclude-mapping path="/main/*"/>-->
            <bean class="com.bjpn.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>